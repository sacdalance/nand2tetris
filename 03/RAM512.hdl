// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=dM8W0, b=dM8W1, c=dM8W2, d=dM8W3, e=dM8W4, f=dM8W5, g=dM8W6, h=dM8W7);
    RAM64(in=in, load=dM8W0, address=address[3..8], out=r0);
    RAM64(in=in, load=dM8W1, address=address[3..8], out=r1);
    RAM64(in=in, load=dM8W2, address=address[3..8], out=r2);
    RAM64(in=in, load=dM8W3, address=address[3..8], out=r3);
    RAM64(in=in, load=dM8W4, address=address[3..8], out=r4);
    RAM64(in=in, load=dM8W5, address=address[3..8], out=r5);
    RAM64(in=in, load=dM8W6, address=address[3..8], out=r6);
    RAM64(in=in, load=dM8W7, address=address[3..8], out=r7);
    Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[0..2], out=out);
}